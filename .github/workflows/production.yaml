name: Production Deployment

on:
  release:
    types: [published]

jobs:
  deploy_staging:
    name: Deploy Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ vars.ENV_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '21.1.0'

      - name: Install dependencies
        run: npm install
      
      - name: Run migrations
        run: npx migrate-mongo up
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      - name: Lint and build code, then publish to Vercel
        run: >
          npx vercel
          --token ${{ secrets.VERCEL_TOKEN }}
          -n ${{ vars.VERCEL_PROJECT }}
          --yes
          --prod
          --env MONGODB_URI=${{ secrets.MONGODB_URI }}
          --env BASE_URL=${{ vars.ENV_URL }}
          --env AUTH_SECRET=${{ secrets.AUTH_SECRET }}
          --env HMAC_INVITE_SECRET=${{ secrets.HMAC_INVITE_SECRET }}
          --env INVITE_TIMEOUT=${{ vars.INVITE_TIMEOUT }}
          --env RESET_TIMEOUT=${{ vars.RESET_TIMEOUT }}
          --env SENDER_EMAIL=${{ vars.SENDER_EMAIL }}
          --env SENDER_PWD=${{ secrets.SENDER_PWD }}
          --build-env MONGODB_URI=${{ secrets.MONGODB_URI }}
          --build-env BASE_URL=${{ vars.ENV_URL }}
          --build-env AUTH_SECRET=${{ secrets.AUTH_SECRET }}
          --build-env HMAC_INVITE_SECRET=${{ secrets.HMAC_INVITE_SECRET }}
          --build-env INVITE_TIMEOUT=${{ vars.INVITE_TIMEOUT }}
          --build-env RESET_TIMEOUT=${{ vars.RESET_TIMEOUT }}
          --build-env SENDER_EMAIL=${{ vars.SENDER_EMAIL }}
          --build-env SENDER_PWD=${{ secrets.SENDER_PWD }}

      - name: Success
        run: echo "üöÄ  Deploy successful - BLAST OFF WOO! (woot woot) !!! üêï üêï üêï üöÄ "